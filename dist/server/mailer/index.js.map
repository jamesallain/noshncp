{"version":3,"sources":["../../../js/server/mailer/index.js"],"names":["subjectCreate","type","email","Html","props","subject","password","htmlCreate","renderToString","userCrudMailSend","html","transporter","createTransport","host","auth","user","process","env","npm_package_config_GMAIL_USER","pass","npm_package_config_GMAIL_PASS","mailOpts","from","to","sendMail","err","res","console","log"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,KAAP,EAAiB;AACrC,UAAQD,IAAR;AACE,SAAK,YAAL;AACE,0BAAkBC,KAAlB;AACF,SAAK,mBAAL;AACE,+BAAuBA,KAAvB;AACF,SAAK,YAAL;AACE,+BAAuBA,KAAvB;AACF,SAAK,YAAL;AACE,sBAAcA,KAAd;AARJ;AAUD,CAXD;;IAaMC,I;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAK,eAAKC,KAAL,CAAWC;AAAhB,SADF;AAIK,aAAKD,KAAL,CAAWH,IAAX,KAAoB,YAArB,IACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AAAA;AAAA;AAAK,iBAAKG,KAAL,CAAWF;AAAhB,WAFF;AAGE;AAAA;AAAA;AAAA;AAAA,WAHF;AAIE;AAAA;AAAA;AAAK,iBAAKE,KAAL,CAAWE;AAAhB;AAJF;AALN,OADF;AAeD;;;;;AAGH,IAAMC,aAAa,SAAbA,UAAa,CAACF,OAAD,EAAUH,KAAV,EAAiBI,QAAjB,EAA2BL,IAA3B,EAAoC;AACrD,SAAO,iBAAeO,cAAf,CACL,8BAAC,IAAD;AACE,aAAWH,OADb;AAEE,WAASH,KAFX;AAGE,cAAYI,QAHd;AAIE,UAAQL;AAJV,IADK,CAAP;AAQD,CATD;;AAWA,IAAMQ,mBAAmB,SAAnBA,gBAAmB,CAACR,IAAD,EAAOC,KAAP,EAAcI,QAAd,EAA2B;AAClD,MAAMD,UAAUL,cAAcC,IAAd,EAAoBC,KAApB,CAAhB;AACA,MAAMQ,OAAOH,WAAWF,OAAX,EAAoBH,KAApB,EAA2BI,QAA3B,EAAqCL,IAArC,CAAb;;AAEA,MAAMU,cAAc,qBAAWC,eAAX,CAClB;AACEC,UAAM,gBADR;AAEEC,UAAM;AACJC,YAAMC,QAAQC,GAAR,CAAYC,6BADd;AAEJC,YAAMH,QAAQC,GAAR,CAAYG;AAFd;AAFR,GADkB,CAApB;;AAUA,MAAMC,WAAW;AACfC,UAAMN,QAAQC,GAAR,CAAYC,6BADH;AAEfK,QAAIrB,KAFW;AAGfG,oBAHe;AAIfK;AAJe,GAAjB;;AAOAC,cAAYa,QAAZ,CACEH,QADF,EAEE,UAACI,GAAD,EAAMC,GAAN,EAAc;AACZ,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACD,KAFD,MAGK;AACHE,cAAQC,GAAR,CAAYF,GAAZ;AACD;AACF,GATH;AAWD,CAhCD;;QAmCEjB,gB,GAAAA,gB","file":"index.js","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport nodemailer from 'nodemailer';\n\nconst subjectCreate = (type, email) => {\n  switch (type) {\n    case 'userCreate':\n      return `Welcome ${email}, your login details.`;\n    case 'userPasswordReset':\n      return `Weclome back ${email}, you have reset your password.`;\n    case 'userUpdate':\n      return `Welcome back ${email}, you have updated your login-details.`;\n    case 'userDelete':\n      return `Bye ${email}, you have deleted your account`;\n  }\n};\n\nclass Html extends Component {\n  render() {\n    return (\n      <div>\n        <h4>{this.props.subject}</h4>\n\n        {\n          (this.props.type !== 'userDelete') &&\n            <dl>\n              <dt>Email</dt>\n              <dd>{this.props.email}</dd>\n              <dt>Password</dt>\n              <dd>{this.props.password}</dd>\n            </dl>\n        }\n      </div>\n    );\n  }\n}\n\nconst htmlCreate = (subject, email, password, type) => {\n  return ReactDOMServer.renderToString(\n    <Html\n      subject = {subject}\n      email = {email}\n      password = {password}\n      type = {type}\n    />\n  );\n};\n\nconst userCrudMailSend = (type, email, password) => {\n  const subject = subjectCreate(type, email);\n  const html = htmlCreate(subject, email, password, type);\n\n  const transporter = nodemailer.createTransport(\n    {\n      host: 'smtp.gmail.com',\n      auth: {\n        user: process.env.npm_package_config_GMAIL_USER,\n        pass: process.env.npm_package_config_GMAIL_PASS\n      }\n    }\n  );\n\n  const mailOpts = {\n    from: process.env.npm_package_config_GMAIL_USER,\n    to: email,\n    subject,\n    html\n  };\n\n  transporter.sendMail(\n    mailOpts,\n    (err, res) => {\n      if (err) {\n        console.log(err);\n      }\n      else {\n        console.log(res);\n      }\n    }\n  );\n};\n\nexport {\n  userCrudMailSend\n};\n"]}